syntax = "v1"

@server (
	group:  shorturl
	prefix: /api/v1
)
service goshorturl {
	@handler AccessShortUrlHandler
	get /shorturl/access (AccessShortUrlRequest) returns (AccessShortUrlResponse)

	@handler DetailShortUrlHandler
	get /shorturl/detail (DetailShortUrlRequest) returns (DetailShortUrlResponse)

	@handler CreateShortUrlHandler
	post /shorturl/create (CreateShortUrlRequest) returns (CreatShortUrlResponse)

	@handler UpdateShortUrlHandler
	put /shorturl/update (UpdateShortUrlRequest) returns (UpdateShortUrlResponse)
}

type AccessShortUrlRequest {
	Url string `form:"url"`
}

type AccessShortUrlResponse {
	Localtion string `json:"localtion"`
}

type DetailShortUrlRequest {
	Id  uint   `form:"id,optional"`
	Url string `form:"url,optional"`
}

type DetailShortUrlResponse {
	Id          uint   `json:"id"`
	Url         string `json:"url"`
	Origin      string `json:"origin"`
	Description string `json:"description"`
	ExpireAt    string `json:"expire_at"`
	CreatedAt   string `json:"created_at"`
}

type CreateShortUrlRequest {
	Origin      string `json:"origin"`
	Description string `json:"description"`
	ExpireAt    string `json:"expire_at"` // ISO 8601 格式 格式: "2023-08-15T14:30:00+08:00"
}

type CreatShortUrlResponse {
	Id  uint   `json:"id"`
	Url string `json:"url"`
}

type UpdateShortUrlRequest {
	Id          uint   `json:"id"`
	Description string `json:"description,optional"`
	ExpireAt    string `json:"expire_at,optional"` // ISO 8601 格式 格式: "2023-08-15T14:30:00+08:00"
}

type UpdateShortUrlResponse {}

